use std::f64::consts::PI;

fn main() {
    // Вывод заголовка таблицы
    println!("+----------+----------+");
    println!("|         x|         y|");
    println!("+----------+----------+");

    // Определение переменных и контейнера для хранения пар (x, y)
    let toch: f64 = 10000.0; // Точность округления до 4 знаков после запятой
    let delta: f64 = 0.5;    // Шаг изменения x
    let mut cont: Vec<(f64, f64)> = Vec::new(); // Вектор кортежей для хранения пар (x, y)

    // Цикл для вычисления значений y для различных диапазонов x
    for x in (-9..=5).step_by(1) {
        let x: f64 = (x as f64) * delta;
        let x = (x * toch).round() / toch; // Округление x до 4 знаков после запятой
        let y = if x <= -5.0 {
            0.5 * x.powi(2) + 7.0 * x + 24.5 // Вычисление y для x в диапазоне [-9, -5]
        } else if x <= -4.0 {
            2.0 // Вычисление y для x в диапазоне (-5, -4]
        } else if x <= 0.0 {
            -0.5 * x // Вычисление y для x в диапазоне (-4, 0]
        } else if x <= 3.14 {
            x.sin() // Вычисление y для x в диапазоне (0, 3.14]
        } else if x <= 5.0 {
            x - PI // Вычисление y для x в диапазоне (3.14, 5]
        } else {
            0.0
        };
        let y = (y * toch).round() / toch; // Округление y до 4 знаков после запятой
        cont.push((x, y)); // Добавление кортежа в вектор
    }

    // Вывод таблицы с результатами
    for (x, y) in &cont {
        println!("|{:10.4}|{:10.4}|", x, y);
        println!("+----------+----------+");
    }
}
